"""
Transformer 번역 모델 설정 파일
"""

import torch

class Config:
    """훈련 설정 클래스"""
    
    # =============================================================================
    # 데이터 관련 설정
    # =============================================================================
    DATA_DIR = "data"                                    # 데이터 폴더 경로
    TRAIN_FILENAME = "일상생활구어체_train_set"           # 훈련 데이터 파일명 (.json 자동 추가)
    VALID_FILENAME = "일상생활구어체_valid_set"           # 검증 데이터 파일명 (.json 자동 추가)
    
    SRC_FIELD = "korean"                                 # 소스 언어 필드명 (JSON의 ko -> korean)
    TGT_FIELD = "english"                                # 타겟 언어 필드명 (JSON의 en -> english)
    
    MIN_FREQ = 2                                         # 어휘 사전 최소 빈도
    
    # =============================================================================
    # 모델 하이퍼파라미터
    # =============================================================================
    D_MODEL = 512                                        # 모델 차원 (임베딩 차원)
    NUM_HEADS = 8                                        # 멀티헤드 어텐션 헤드 수
    NUM_LAYERS = 6                                       # 인코더/디코더 레이어 수
    FF_SIZE = 2048                                       # Feed Forward 내부 차원
    DROPOUT = 0.1                                        # 드롭아웃 확률
    MAX_LENGTH = 5000                                    # 최대 시퀀스 길이 (위치 인코딩용)
    
    # =============================================================================
    # 훈련 관련 설정
    # =============================================================================
    BATCH_SIZE = 32                                      # 배치 크기
    LEARNING_RATE = 1e-4                                 # 학습률
    NUM_EPOCHS = 10                                      # 훈련 에포크 수
    
    # Optimizer 설정
    WEIGHT_DECAY = 1e-4                                  # 가중치 감쇠
    BETAS = (0.9, 0.98)                                  # Adam beta 파라미터
    EPS = 1e-9                                          # Adam epsilon
    
    # 스케줄러 설정
    SCHEDULER_PATIENCE = 2                               # ReduceLROnPlateau patience
    SCHEDULER_FACTOR = 0.5                               # 학습률 감소 비율
    
    # Gradient clipping
    MAX_GRAD_NORM = 1.0                                  # 최대 gradient norm
    
    # =============================================================================
    # 평가 및 저장 설정
    # =============================================================================
    SAVE_DIR = "checkpoints"                             # 모델 저장 디렉토리
    SAVE_EVERY = 1                                       # 몇 에포크마다 모델 저장할지
    EVAL_EVERY = 1                                       # 몇 에포크마다 평가할지
    TRANSLATE_EVERY = 2                                  # 몇 에포크마다 번역 테스트할지
    
    LOG_INTERVAL = 100                                   # 몇 배치마다 로그 출력할지
    
    # =============================================================================
    # 번역 테스트 설정
    # =============================================================================
    TEST_SENTENCES = [                                   # 번역 테스트용 문장들 (훈련 중 성능 확인)
        # 기본 인사 및 일상 표현
        "안녕하세요, 반갑습니다",
        "오늘 날씨가 정말 좋네요",
        "정말 감사합니다",
        "죄송합니다, 늦었어요",
        
        # 비즈니스 상황
        "회의가 몇 시에 시작하나요?",
        "보고서를 내일까지 완료해서 보내드리겠습니다",
        "고객과의 미팅을 다음 주로 연기해야 할 것 같습니다",
        
        # 쇼핑 및 주문
        "이 상품의 가격이 얼마인가요?",
        "배송은 보통 며칠 정도 걸리나요?",
        "주문을 취소하고 싶은데 가능할까요?",
        
        # 음식 및 레스토랑
        "메뉴 추천해 주실 수 있나요?",
        "계산서 주세요",
        "테이블 예약이 가능한지 확인해 주세요",
        
        # 복잡한 문장들
        "어제 친구와 함께 영화를 보러 갔는데 정말 재미있었어요",
        "새로 산 컴퓨터가 잘 작동하지 않아서 고객 서비스에 문의하려고 합니다",
        "주말에 가족들과 함께 맛있는 식당에서 저녁을 먹을 예정입니다"
    ]
    
    GENERATION_MAX_LENGTH = 50                           # 생성 시 최대 길이
    
    # =============================================================================
    # 시스템 설정
    # =============================================================================
    DEVICE = "cuda" if torch.cuda.is_available() else "cpu"  # 사용할 디바이스
    NUM_WORKERS = 0                                      # 데이터 로더 워커 수
    PIN_MEMORY = True                                    # GPU 사용 시 메모리 고정
    
    # 재현 가능성을 위한 시드
    RANDOM_SEED = 42
    
    # =============================================================================
    # 디버그 및 로깅 설정
    # =============================================================================
    VERBOSE = True                                       # 상세 로그 출력 여부
    SAVE_PLOTS = True                                    # 훈련 그래프 저장 여부
    
    @classmethod
    def print_config(cls):
        """설정 정보 출력"""
        print("=" * 50)
        print("🔧 Transformer 번역 모델 설정")
        print("=" * 50)
        
        print(f"📁 데이터:")
        print(f"   데이터 디렉토리: {cls.DATA_DIR}")
        print(f"   훈련 파일: {cls.TRAIN_FILENAME}.json")
        print(f"   검증 파일: {cls.VALID_FILENAME}.json")
        print(f"   최소 빈도: {cls.MIN_FREQ}")
        
        print(f"\n🏗️ 모델:")
        print(f"   모델 차원: {cls.D_MODEL}")
        print(f"   헤드 수: {cls.NUM_HEADS}")
        print(f"   레이어 수: {cls.NUM_LAYERS}")
        print(f"   FF 차원: {cls.FF_SIZE}")
        print(f"   드롭아웃: {cls.DROPOUT}")
        
        print(f"\n🔥 훈련:")
        print(f"   배치 크기: {cls.BATCH_SIZE}")
        print(f"   학습률: {cls.LEARNING_RATE}")
        print(f"   에포크 수: {cls.NUM_EPOCHS}")
        print(f"   디바이스: {cls.DEVICE}")
        
        print(f"\n💾 저장:")
        print(f"   저장 디렉토리: {cls.SAVE_DIR}")
        print(f"   번역 테스트 주기: 매 {cls.TRANSLATE_EVERY} 에포크")
        
        print("=" * 50)

# 편의를 위한 전역 설정 인스턴스
config = Config()